
.container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  animation: slideUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) both;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

.inputSection {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  text-align: center;
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
  background: var(--brand-primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-family: 'Playfair Display', serif;
  line-height: 1.2;
  letter-spacing: -0.02em;
}

.inputWrapper {
  position: relative;
  background: var(--surface-raised);
  border: 2px solid var(--border-primary);
  border-radius: 16px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.inputWrapper::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--brand-primary);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.inputWrapper.focused {
  border-color: var(--brand-accent);
  transform: translateY(-2px);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12), 0 0 0 4px rgba(var(--brand-accent-rgb), 0.1);
}

.inputWrapper.focused::before {
  opacity: 0.02;
}

.input {
  width: 100%;
  background: transparent;
  border: none;
  outline: none;
  color: var(--text-primary);
  font-size: 1.1rem;
  font-family: inherit;
  resize: none;
  line-height: 1.6;
  padding: 1.5rem;
  min-height: 120px;
  transition: all 0.3s ease;
  font-weight: 400;
}

.input::placeholder {
  color: var(--text-tertiary);
  opacity: 0.7;
  transition: opacity 0.3s ease;
}

.input:focus::placeholder {
  opacity: 0.5;
}

.inputDecorator {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  height: 3px;
  width: 100%;
  background: var(--brand-primary);
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 2px;
}

.inputWrapper.focused .inputDecorator {
  transform: translateX(-50%) scaleX(1);
}

.generateButton {
  background: var(--brand-primary);
  color: white;
  border: none;
  border-radius: 14px;
  padding: 1.25rem 2rem;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-family: inherit;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  align-self: center;
}

.generateButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.6s ease;
}

.generateButton:hover:not(:disabled) {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
}

.generateButton:hover:not(:disabled)::before {
  left: 100%;
}

.generateButton:active:not(:disabled) {
  transform: translateY(0) scale(1);
}

.generateButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.buttonContent {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  z-index: 1;
  position: relative;
}

.buttonIcon {
  font-size: 1.2rem;
  transition: transform 0.3s ease;
}

.generateButton:hover:not(:disabled) .buttonIcon {
  transform: scale(1.1) rotate(10deg);
}

.shortcut {
  background: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.9);
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
  font-size: 0.85rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.optionsGrid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 2rem;
  margin-bottom: 1rem;
}

.optionGroup {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  text-align: left;
}

.optionLabel {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
}

.genreGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.75rem;
}

.genreButton {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem;
  background: var(--surface-raised);
  border: 2px solid var(--border-primary);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-align: left;
  font-family: inherit;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
}

.genreButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  border-color: var(--brand-accent);
}

.genreButton.selected {
  border-color: var(--brand-accent);
  background: var(--bg-accent);
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(var(--brand-accent-rgb), 0.2);
}

.genreEmoji {
  font-size: 1.5rem;
}

.genreInfo {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.genreName {
  font-weight: 600;
  color: var(--text-primary);
  font-size: 0.9rem;
}

.genreDesc {
  font-size: 0.75rem;
  color: var(--text-tertiary);
}

.lengthOptions {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.lengthButton {
  padding: 1rem;
  background: var(--surface-raised);
  border: 2px solid var(--border-primary);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-align: left;
  font-family: inherit;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
}

.lengthButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  border-color: var(--brand-accent);
}

.lengthButton.selected {
  border-color: var(--brand-accent);
  background: var(--bg-accent);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(var(--brand-accent-rgb), 0.15);
}

.lengthInfo {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.lengthName {
  font-weight: 600;
  color: var(--text-primary);
  font-size: 0.9rem;
}

.lengthDetails {
  font-size: 0.75rem;
  color: var(--text-tertiary);
}

/* Animations */
@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Dark theme */
:global(.dark) .inputWrapper {
  background: var(--surface-raised);
  border-color: var(--border-primary);
}

:global(.dark) .input {
  color: var(--text-primary);
}

:global(.dark) .input::placeholder {
  color: var(--text-tertiary);
}

:global(.dark) .title {
  color: var(--text-primary);
}

/* Responsive design */
@media (max-width: 768px) {
  .container {
    padding: 0 1rem;
  }
  
  .title {
    font-size: 2rem;
  }
  
  .optionsGrid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .genreGrid {
    grid-template-columns: 1fr;
  }
  
  .input {
    padding: 1.25rem;
    font-size: 1rem;
    min-height: 100px;
  }
  
  .generateButton {
    width: 100%;
    padding: 1.5rem 2rem;
  }
  
  .shortcut {
    display: none;
  }
}

@media (max-width: 480px) {
  .title {
    font-size: 1.75rem;
  }
  
  .input {
    padding: 1rem;
    min-height: 90px;
  }
  
  .generateButton {
    padding: 1.25rem 1.5rem;
    font-size: 1rem;
  }
  
  .form {
    gap: 2rem;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .container {
    animation: none;
  }
  
  .generateButton::before,
  .inputDecorator {
    display: none;
  }
  
  .generateButton:hover .buttonIcon {
    transform: none;
  }
}
